!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AVC_DEC	s3c_mfc_base.h	/^	AVC_DEC    = 2,$/;"	e	enum:__MFC_CODEC_MODE
AVC_ENC	s3c_mfc_base.h	/^	AVC_ENC    = 3,$/;"	e	enum:__MFC_CODEC_MODE
BOOL	s3c_mfc_types.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	t	typeref:enum:__anon14
DEC_PARA_SET	s3c_mfc_base.h	/^	DEC_PARA_SET     = 0x07,$/;"	e	enum:__MFC_COMMAND
ENC_HEADER	s3c_mfc_base.h	/^	ENC_HEADER       = 0x05,$/;"	e	enum:__MFC_COMMAND
ENC_PARAM_CHANGE	s3c_mfc_base.h	/^	ENC_PARAM_CHANGE = 0x09,$/;"	e	enum:__MFC_COMMAND
ENC_PARA_SET	s3c_mfc_base.h	/^	ENC_PARA_SET     = 0x06,$/;"	e	enum:__MFC_COMMAND
FALSE	s3c_mfc_types.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	e	enum:__anon14
GET_FW_VER	s3c_mfc_base.h	/^	GET_FW_VER       = 0x0F$/;"	e	enum:__MFC_COMMAND
H263_DEC	s3c_mfc_base.h	/^	H263_DEC   = 5,$/;"	e	enum:__MFC_CODEC_MODE
H263_ENC	s3c_mfc_base.h	/^	H263_ENC   = 6$/;"	e	enum:__MFC_CODEC_MODE
MFC_DEBUG	s3c_mfc.h	78;"	d
MFC_ERROR	s3c_mfc.h	84;"	d
MFC_INFO	s3c_mfc.h	96;"	d
MFC_NOTICE	s3c_mfc.h	90;"	d
MFC_RESERVED_MEM_START	s3c_mfc_config.h	26;"	d
MFC_WARN	s3c_mfc.h	102;"	d
MP4_DEC	s3c_mfc_base.h	/^	MP4_DEC    = 0,$/;"	e	enum:__MFC_CODEC_MODE
MP4_ENC	s3c_mfc_base.h	/^	MP4_ENC    = 1,$/;"	e	enum:__MFC_CODEC_MODE
PIC_RUN	s3c_mfc_base.h	/^	PIC_RUN          = 0x03,$/;"	e	enum:__MFC_COMMAND
RET_DEC_PIC_RUN_BAK_BYTE_CONSUMED	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_PIC_RUN_BAK_BYTE_CONSUMED;$/;"	m	struct:__anon3
RET_DEC_PIC_RUN_BAK_MP4ASP_FCODE	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_PIC_RUN_BAK_MP4ASP_FCODE;$/;"	m	struct:__anon3
RET_DEC_PIC_RUN_BAK_MP4ASP_MP4ASP_TRD	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_PIC_RUN_BAK_MP4ASP_MP4ASP_TRD;$/;"	m	struct:__anon3
RET_DEC_PIC_RUN_BAK_MP4ASP_NONB_TIME_LAST	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_PIC_RUN_BAK_MP4ASP_NONB_TIME_LAST;$/;"	m	struct:__anon3
RET_DEC_PIC_RUN_BAK_MP4ASP_TIME_BASE_LAST	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_PIC_RUN_BAK_MP4ASP_TIME_BASE_LAST;$/;"	m	struct:__anon3
RET_DEC_SEQ_INIT_BAK_MP4ASP_VOP_TIME_RES	s3c_mfc_instance.h	/^	unsigned int	RET_DEC_SEQ_INIT_BAK_MP4ASP_VOP_TIME_RES;$/;"	m	struct:__anon3
S3C_ENC_PARAM_BITRATE	s3c_mfc_params.h	134;"	d
S3C_ENC_PARAM_F_RATE	s3c_mfc_params.h	135;"	d
S3C_ENC_PARAM_GOP_NUM	s3c_mfc_params.h	132;"	d
S3C_ENC_PARAM_INTRA_QP	s3c_mfc_params.h	133;"	d
S3C_ENC_PARAM_INTRA_REF	s3c_mfc_params.h	136;"	d
S3C_ENC_PARAM_SLICE_MODE	s3c_mfc_params.h	137;"	d
S3C_ENC_PIC_OPT_IDR	s3c_mfc_params.h	139;"	d
S3C_ENC_PIC_OPT_RECOVERY	s3c_mfc_params.h	141;"	d
S3C_ENC_PIC_OPT_SKIP	s3c_mfc_params.h	140;"	d
S3C_MFC_ANNEX_I_OFF	s3c_mfc_base.h	80;"	d
S3C_MFC_ANNEX_I_ON	s3c_mfc_base.h	81;"	d
S3C_MFC_ANNEX_J_OFF	s3c_mfc_base.h	78;"	d
S3C_MFC_ANNEX_J_ON	s3c_mfc_base.h	79;"	d
S3C_MFC_ANNEX_K_OFF	s3c_mfc_base.h	76;"	d
S3C_MFC_ANNEX_K_ON	s3c_mfc_base.h	77;"	d
S3C_MFC_ANNEX_T_OFF	s3c_mfc_base.h	74;"	d
S3C_MFC_ANNEX_T_ON	s3c_mfc_base.h	75;"	d
S3C_MFC_AUD_DISABLE	s3c_mfc_base.h	53;"	d
S3C_MFC_AUD_ENABLE	s3c_mfc_base.h	54;"	d
S3C_MFC_BASEADDR_BITPROC_BUF	s3c_mfc_config.h	32;"	d
S3C_MFC_BASEADDR_DATA_BUF	s3c_mfc_config.h	37;"	d
S3C_MFC_BASEADDR_POST_SFR	s3c_mfc_config.h	40;"	d
S3C_MFC_BITPROC_BUF_SIZE	s3c_mfc_config.h	58;"	d
S3C_MFC_BUF_SEGMENT_SIZE	s3c_mfc_yuv_buf_manager.c	26;"	d	file:
S3C_MFC_BUF_STATUS_FULL_EMPTY_CHECK_BIT	s3c_mfc_base.h	20;"	d
S3C_MFC_BUF_STATUS_NO_CHECK_BIT	s3c_mfc_base.h	21;"	d
S3C_MFC_CIF_FRAME_SIZE	s3c_mfc_config.h	100;"	d
S3C_MFC_CODE_BUF_SIZE	s3c_mfc_config.h	49;"	d
S3C_MFC_COMMIT_INFO_SIZE	s3c_mfc_config.h	90;"	d
S3C_MFC_CONST_QP_DISABLE	s3c_mfc_base.h	57;"	d
S3C_MFC_CONST_QP_ENBLE	s3c_mfc_base.h	58;"	d
S3C_MFC_D1_FRAME_SIZE	s3c_mfc_config.h	103;"	d
S3C_MFC_DATA_BUF_SIZE	s3c_mfc_config.h	94;"	d
S3C_MFC_DATA_PART_DISABLE	s3c_mfc_base.h	66;"	d
S3C_MFC_DATA_PART_ENABLE	s3c_mfc_base.h	67;"	d
S3C_MFC_DATA_VERID_1	s3c_mfc_base.h	70;"	d
S3C_MFC_DATA_VERID_2	s3c_mfc_base.h	69;"	d
S3C_MFC_DEC_PIC_OPT_MP4ASP	s3c_mfc_params.h	143;"	d
S3C_MFC_DIVX_FRAME_SIZE	s3c_mfc_config.h	105;"	d
S3C_MFC_DRV_RET_ERR_HANDLE_INVALIDATED	s3c_mfc.h	69;"	d
S3C_MFC_DRV_RET_ERR_INVALID_PARAM	s3c_mfc.h	68;"	d
S3C_MFC_DRV_RET_ERR_OTHERS	s3c_mfc.h	70;"	d
S3C_MFC_DRV_RET_OK	s3c_mfc.h	67;"	d
S3C_MFC_DYNBUFALLOC_DISABLE	s3c_mfc_base.h	43;"	d
S3C_MFC_DYNBUFALLOC_ENABLE	s3c_mfc_base.h	42;"	d
S3C_MFC_FILEPLAY_DISABLE	s3c_mfc_base.h	41;"	d
S3C_MFC_FILEPLAY_ENABLE	s3c_mfc_base.h	40;"	d
S3C_MFC_FMO_DISABLE	s3c_mfc_base.h	94;"	d
S3C_MFC_FMO_ENABLE	s3c_mfc_base.h	95;"	d
S3C_MFC_GET_CONFIG_DEC_BYTE_CONSUMED	s3c_mfc_params.h	112;"	d
S3C_MFC_GET_CONFIG_DEC_H264_CROPINFO	s3c_mfc_params.h	104;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_FCODE	s3c_mfc_params.h	107;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_MBTYPE	s3c_mfc_params.h	103;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_MV	s3c_mfc_params.h	102;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_NONB_TIME_LAST	s3c_mfc_params.h	110;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_TIME_BASE_LAST	s3c_mfc_params.h	109;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_TRD	s3c_mfc_params.h	111;"	d
S3C_MFC_GET_CONFIG_DEC_MP4ASP_VOP_TIME_RES	s3c_mfc_params.h	108;"	d
S3C_MFC_GET_CONFIG_DEC_YUV_NEED_COUNT	s3c_mfc_params.h	101;"	d
S3C_MFC_H263_ENCODE	s3c_mfc_base.h	62;"	d
S3C_MFC_H264_ENCODE	s3c_mfc_base.h	63;"	d
S3C_MFC_INST_ERR_DEC_BUF_FILL_SIZE_WRONG	s3c_mfc_instance.h	176;"	d
S3C_MFC_INST_ERR_DEC_DECODE_FAIL_ETC	s3c_mfc_instance.h	173;"	d
S3C_MFC_INST_ERR_DEC_EOS	s3c_mfc_instance.h	175;"	d
S3C_MFC_INST_ERR_DEC_INIT_CMD_FAIL	s3c_mfc_instance.h	171;"	d
S3C_MFC_INST_ERR_DEC_INVALID_STRM	s3c_mfc_instance.h	174;"	d
S3C_MFC_INST_ERR_DEC_PIC_RUN_CMD_FAIL	s3c_mfc_instance.h	172;"	d
S3C_MFC_INST_ERR_ENC_HEADER_CMD_FAIL	s3c_mfc_instance.h	180;"	d
S3C_MFC_INST_ERR_ENC_INIT_CMD_FAIL	s3c_mfc_instance.h	178;"	d
S3C_MFC_INST_ERR_ENC_PARAM_CHANGE_INVALID_VALUE	s3c_mfc_instance.h	181;"	d
S3C_MFC_INST_ERR_ENC_PIC_RUN_CMD_FAIL	s3c_mfc_instance.h	179;"	d
S3C_MFC_INST_ERR_ETC	s3c_mfc_instance.h	185;"	d
S3C_MFC_INST_ERR_INVALID_PARAM	s3c_mfc_instance.h	165;"	d
S3C_MFC_INST_ERR_MEMORY_ALLOCATION_FAIL	s3c_mfc_instance.h	183;"	d
S3C_MFC_INST_ERR_STATE_CHK	s3c_mfc_instance.h	166;"	d
S3C_MFC_INST_ERR_STATE_DELETED	s3c_mfc_instance.h	167;"	d
S3C_MFC_INST_ERR_STATE_POWER_OFF	s3c_mfc_instance.h	168;"	d
S3C_MFC_INST_ERR_WRONG_CODEC_MODE	s3c_mfc_instance.h	169;"	d
S3C_MFC_INST_RET_OK	s3c_mfc_instance.h	163;"	d
S3C_MFC_INST_STATE	s3c_mfc_instance.h	36;"	d
S3C_MFC_INST_STATE_BUF_FILL_REQ	s3c_mfc_instance.h	33;"	d
S3C_MFC_INST_STATE_BUF_FILL_REQ_CHECK	s3c_mfc_instance.h	44;"	d
S3C_MFC_INST_STATE_BUF_FILL_REQ_CLEAR	s3c_mfc_instance.h	43;"	d
S3C_MFC_INST_STATE_BUF_FILL_REQ_SET	s3c_mfc_instance.h	42;"	d
S3C_MFC_INST_STATE_CHECK	s3c_mfc_instance.h	37;"	d
S3C_MFC_INST_STATE_CREATED	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_CREATED         = 10,	\/* instance is created but not initialized *\/$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_DEC_INITIALIZED	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_DEC_INITIALIZED = 20,	\/* instance is initialized for decoding *\/$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_DEC_PIC_RUN_LINE_BUF	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_DEC_PIC_RUN_LINE_BUF,$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_DELETED	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_DELETED = 0,			\/* instance is deleted *\/$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_ENC_INITIALIZED	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_ENC_INITIALIZED = 30,	\/* instance is initialized for encoding *\/$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_ENC_PIC_RUN_LINE_BUF	s3c_mfc_instance.h	/^	S3C_MFC_INST_STATE_ENC_PIC_RUN_LINE_BUF,$/;"	e	enum:__anon2
S3C_MFC_INST_STATE_PWR_OFF_FLAG	s3c_mfc_instance.h	32;"	d
S3C_MFC_INST_STATE_PWR_OFF_FLAG_CHECK	s3c_mfc_instance.h	41;"	d
S3C_MFC_INST_STATE_PWR_OFF_FLAG_CLEAR	s3c_mfc_instance.h	40;"	d
S3C_MFC_INST_STATE_PWR_OFF_FLAG_SET	s3c_mfc_instance.h	39;"	d
S3C_MFC_INST_STATE_TRANSITION	s3c_mfc_instance.h	35;"	d
S3C_MFC_INTR_ENABLE_ALL	s3c_mfc_intr_noti.h	21;"	d
S3C_MFC_INTR_ENABLE_RESET	s3c_mfc_intr_noti.h	22;"	d
S3C_MFC_INTR_NOTI_TIMEOUT	s3c_mfc_intr_noti.h	16;"	d
S3C_MFC_INTR_REASON_BUFFER_EMPTY	s3c_mfc_intr_noti.h	28;"	d
S3C_MFC_INTR_REASON_INTRNOTI_TIMEOUT	s3c_mfc_intr_noti.h	29;"	d
S3C_MFC_INTR_REASON_NULL	s3c_mfc_intr_noti.h	27;"	d
S3C_MFC_IOCTL_CACHE_FLUSH_B_YUV	s3c_mfc.h	56;"	d
S3C_MFC_IOCTL_MFC_GET_B_YUV_BUF_ADDR	s3c_mfc.h	58;"	d
S3C_MFC_IOCTL_MFC_GET_CONFIG	s3c_mfc.h	42;"	d
S3C_MFC_IOCTL_MFC_GET_LINE_BUF_ADDR	s3c_mfc.h	37;"	d
S3C_MFC_IOCTL_MFC_GET_MPEG4_ASP_PARAM	s3c_mfc.h	43;"	d
S3C_MFC_IOCTL_MFC_GET_PHY_B_YUV_BUF_ADDR	s3c_mfc.h	57;"	d
S3C_MFC_IOCTL_MFC_GET_PHY_FRAM_BUF_ADDR	s3c_mfc.h	41;"	d
S3C_MFC_IOCTL_MFC_GET_POST_BUF_ADDR	s3c_mfc.h	40;"	d
S3C_MFC_IOCTL_MFC_GET_RING_BUF_ADDR	s3c_mfc.h	38;"	d
S3C_MFC_IOCTL_MFC_GET_YUV_BUF_ADDR	s3c_mfc.h	39;"	d
S3C_MFC_IOCTL_MFC_GET_YUV_SIZE	s3c_mfc.h	49;"	d
S3C_MFC_IOCTL_MFC_H263_DEC_EXE	s3c_mfc.h	31;"	d
S3C_MFC_IOCTL_MFC_H263_DEC_INIT	s3c_mfc.h	29;"	d
S3C_MFC_IOCTL_MFC_H263_ENC_EXE	s3c_mfc.h	32;"	d
S3C_MFC_IOCTL_MFC_H263_ENC_INIT	s3c_mfc.h	30;"	d
S3C_MFC_IOCTL_MFC_H264_DEC_EXE	s3c_mfc.h	26;"	d
S3C_MFC_IOCTL_MFC_H264_DEC_INIT	s3c_mfc.h	24;"	d
S3C_MFC_IOCTL_MFC_H264_ENC_EXE	s3c_mfc.h	27;"	d
S3C_MFC_IOCTL_MFC_H264_ENC_INIT	s3c_mfc.h	25;"	d
S3C_MFC_IOCTL_MFC_MPEG4_DEC_EXE	s3c_mfc.h	21;"	d
S3C_MFC_IOCTL_MFC_MPEG4_DEC_INIT	s3c_mfc.h	19;"	d
S3C_MFC_IOCTL_MFC_MPEG4_ENC_EXE	s3c_mfc.h	22;"	d
S3C_MFC_IOCTL_MFC_MPEG4_ENC_INIT	s3c_mfc.h	20;"	d
S3C_MFC_IOCTL_MFC_SET_CONFIG	s3c_mfc.h	46;"	d
S3C_MFC_IOCTL_MFC_SET_DEC_INBUF_TYPE	s3c_mfc.h	51;"	d
S3C_MFC_IOCTL_MFC_SET_DISP_CONFIG	s3c_mfc.h	48;"	d
S3C_MFC_IOCTL_MFC_SET_H263_MULTIPLE_SLICE	s3c_mfc.h	45;"	d
S3C_MFC_IOCTL_MFC_SET_PP_DISP_SIZE	s3c_mfc.h	50;"	d
S3C_MFC_IOCTL_MFC_VC1_DEC_EXE	s3c_mfc.h	35;"	d
S3C_MFC_IOCTL_MFC_VC1_DEC_INIT	s3c_mfc.h	34;"	d
S3C_MFC_IOCTL_VIRT_TO_PHYS	s3c_mfc.h	53;"	d
S3C_MFC_LINE_BUF_SIZE	s3c_mfc_config.h	85;"	d
S3C_MFC_LINE_BUF_SIZE_PER_INSTANCE	s3c_mfc_config.h	82;"	d
S3C_MFC_MAX_MBYTE_SIZE	s3c_mfc.h	75;"	d
S3C_MFC_MAX_MV_SIZE	s3c_mfc.h	73;"	d
S3C_MFC_MB_BIT_REPORT_DISABLE	s3c_mfc_base.h	49;"	d
S3C_MFC_MB_BIT_REPORT_ENABLE	s3c_mfc_base.h	50;"	d
S3C_MFC_MB_QP_REPORT_DISABLE	s3c_mfc_base.h	55;"	d
S3C_MFC_MB_QP_REPORT_ENBLE	s3c_mfc_base.h	56;"	d
S3C_MFC_MIN_YUV_BUF_SIZE	s3c_mfc_config.h	108;"	d
S3C_MFC_MP4_DBK_DISABLE	s3c_mfc_base.h	36;"	d
S3C_MFC_MP4_DBK_ENABLE	s3c_mfc_base.h	37;"	d
S3C_MFC_MPEG4_ENCODE	s3c_mfc_base.h	61;"	d
S3C_MFC_NUM_INSTANCES_MAX	s3c_mfc_config.h	67;"	d
S3C_MFC_PAL_FRAME_SIZE	s3c_mfc_config.h	104;"	d
S3C_MFC_PARA_BUF_SIZE	s3c_mfc_config.h	56;"	d
S3C_MFC_PHYS_BUFFER_SET	s3c_mfc.c	60;"	d	file:
S3C_MFC_QCIF_FRAME_SIZE	s3c_mfc_config.h	99;"	d
S3C_MFC_QVGA_FRAME_SIZE	s3c_mfc_config.h	101;"	d
S3C_MFC_RC_DISABLE	s3c_mfc_base.h	88;"	d
S3C_MFC_RC_ENABLE	s3c_mfc_base.h	89;"	d
S3C_MFC_REORDER_DISABLE	s3c_mfc_base.h	38;"	d
S3C_MFC_REORDER_ENABLE	s3c_mfc_base.h	39;"	d
S3C_MFC_ROTATE_ENABLE	s3c_mfc_config.h	74;"	d
S3C_MFC_SAVE_END_ADDR	s3c_mfc.c	84;"	d	file:
S3C_MFC_SAVE_START_ADDR	s3c_mfc.c	83;"	d	file:
S3C_MFC_SEGMENT_INFO_SIZE	s3c_mfc_config.h	89;"	d
S3C_MFC_SET_CACHE_CLEAN	s3c_mfc_params.h	126;"	d
S3C_MFC_SET_CACHE_CLEAN_INVALIDATE	s3c_mfc_params.h	128;"	d
S3C_MFC_SET_CACHE_INVALIDATE	s3c_mfc_params.h	127;"	d
S3C_MFC_SET_CONFIG_DEC_OPTION	s3c_mfc_params.h	116;"	d
S3C_MFC_SET_CONFIG_DEC_ROTATE	s3c_mfc_params.h	115;"	d
S3C_MFC_SET_CONFIG_ENC_CUR_PIC_OPT	s3c_mfc_params.h	121;"	d
S3C_MFC_SET_CONFIG_ENC_H263_PARAM	s3c_mfc_params.h	118;"	d
S3C_MFC_SET_CONFIG_ENC_LEVEL	s3c_mfc_params.h	123;"	d
S3C_MFC_SET_CONFIG_ENC_PARAM_CHANGE	s3c_mfc_params.h	120;"	d
S3C_MFC_SET_CONFIG_ENC_SLICE_MODE	s3c_mfc_params.h	119;"	d
S3C_MFC_SET_CONFIG_ENC_VOPTIMEINCRESOL	s3c_mfc_params.h	122;"	d
S3C_MFC_SET_PADDING_SIZE	s3c_mfc_params.h	130;"	d
S3C_MFC_SKIP_DISABLE	s3c_mfc_base.h	90;"	d
S3C_MFC_SKIP_ENABLE	s3c_mfc_base.h	91;"	d
S3C_MFC_SLICE_INFO_REPORT_DISABLE	s3c_mfc_base.h	51;"	d
S3C_MFC_SLICE_INFO_REPORT_ENABLE	s3c_mfc_base.h	52;"	d
S3C_MFC_SLICE_MODE_MULTIPLE	s3c_mfc_base.h	85;"	d
S3C_MFC_SLICE_MODE_ONE	s3c_mfc_base.h	84;"	d
S3C_MFC_STREAM_BUF_SIZE	s3c_mfc_config.h	93;"	d
S3C_MFC_STREAM_ENDIAN_BIG	s3c_mfc_base.h	19;"	d
S3C_MFC_STREAM_ENDIAN_LITTLE	s3c_mfc_base.h	18;"	d
S3C_MFC_USER_QP_MAX_DISABLE	s3c_mfc_base.h	98;"	d
S3C_MFC_USER_QP_MAX_ENABLE	s3c_mfc_base.h	99;"	d
S3C_MFC_USE_GAMMA_DISABLE	s3c_mfc_base.h	100;"	d
S3C_MFC_USE_GAMMA_ENABLE	s3c_mfc_base.h	101;"	d
S3C_MFC_VGA_FRAME_SIZE	s3c_mfc_config.h	102;"	d
S3C_MFC_WORK_BUF_SIZE	s3c_mfc_config.h	52;"	d
S3C_MFC_YUV_BUF_CON_SIZE	s3c_mfc_config.h	91;"	d
S3C_MFC_YUV_BUF_SIZE	s3c_mfc_config.h	87;"	d
S3C_MFC_YUV_MEM_ENDIAN_BIG	s3c_mfc_base.h	25;"	d
S3C_MFC_YUV_MEM_ENDIAN_LITTLE	s3c_mfc_base.h	24;"	d
SEQ_END	s3c_mfc_base.h	/^	SEQ_END          = 0x02,$/;"	e	enum:__MFC_COMMAND
SEQ_INIT	s3c_mfc_base.h	/^	SEQ_INIT         = 0x01,$/;"	e	enum:__MFC_COMMAND
SET_FRAME_BUF	s3c_mfc_base.h	/^	SET_FRAME_BUF    = 0x04,$/;"	e	enum:__MFC_COMMAND
SLEEP	s3c_mfc_base.h	/^	SLEEP            = 0x0A,$/;"	e	enum:__MFC_COMMAND
TRUE	s3c_mfc_types.h	/^typedef enum {FALSE, TRUE} BOOL;$/;"	e	enum:__anon14
VC1_DEC	s3c_mfc_base.h	/^	VC1_DEC    = 4,$/;"	e	enum:__MFC_CODEC_MODE
WAKEUP	s3c_mfc_base.h	/^	WAKEUP           = 0x0B,$/;"	e	enum:__MFC_COMMAND
_MFC_HANDLE	s3c_mfc.c	/^typedef struct _MFC_HANDLE {$/;"	s	file:
_S3C_MFC_BASE_H	s3c_mfc_base.h	14;"	d
_S3C_MFC_BITPROC_BUF_H	s3c_mfc_bitproc_buf.h	14;"	d
_S3C_MFC_CONFIG_H	s3c_mfc_config.h	14;"	d
_S3C_MFC_DATABUF_H	s3c_mfc_databuf.h	14;"	d
_S3C_MFC_H	s3c_mfc.h	14;"	d
_S3C_MFC_HW_INIT_H	s3c_mfc_init_hw.h	14;"	d
_S3C_MFC_INSTANCE_H	s3c_mfc_instance.h	14;"	d
_S3C_MFC_INST_POOL_H	s3c_mfc_inst_pool.h	14;"	d
_S3C_MFC_INTR_NOTI_H	s3c_mfc_intr_noti.h	14;"	d
_S3C_MFC_PARAMS_H	s3c_mfc_params.h	14;"	d
_S3C_MFC_SFR_H	s3c_mfc_sfr.h	14;"	d
_S3C_MFC_TYPES_H	s3c_mfc_types.h	14;"	d
_S3C_MFC_YUV_BUF_MANAGER_H	s3c_mfc_yuv_buf_manager.h	14;"	d
_S3C_PRISM_S_H	prism_s.h	14;"	d
__MFC_CODEC_MODE	s3c_mfc_base.h	/^typedef enum __MFC_CODEC_MODE {$/;"	g
__MFC_COMMAND	s3c_mfc_base.h	/^typedef enum __MFC_COMMAND {$/;"	g
__initdata	s3c_mfc.c	/^static char banner[] __initdata = "S3C6400 MFC Driver, (c) 2007 Samsung Electronics\\n";$/;"	v	file:
_mfcinst_ctx	s3c_mfc_instance.c	/^static s3c_mfc_inst_context_t _mfcinst_ctx[S3C_MFC_NUM_INSTANCES_MAX];$/;"	v	file:
bitrate	s3c_mfc_instance.h	/^	int		bitrate;$/;"	m	struct:__anon3
bitrate	s3c_mfc_instance.h	/^	int bitrate;$/;"	m	struct:__anon4
buf_height	s3c_mfc_instance.h	/^	int		buf_width, buf_height;		\/* buf_width is stride. *\/$/;"	m	struct:__anon3
buf_width	s3c_mfc_instance.h	/^	int		buf_width, buf_height;		\/* buf_width is stride. *\/$/;"	m	struct:__anon3
byte_consumed	s3c_mfc_params.h	/^	unsigned int  	byte_consumed;$/;"	m	struct:__anon12
codec_mode	s3c_mfc_instance.h	/^	s3c_mfc_codec_mode_t	codec_mode;$/;"	m	struct:__anon3
crop_value0	s3c_mfc_instance.h	/^	int		crop_value0;			\/* Crop left & right in H.264 Stream *\/$/;"	m	struct:__anon3
crop_value1	s3c_mfc_instance.h	/^	int		crop_value1;			\/* Crop top & bottom in H.264 Stream *\/$/;"	m	struct:__anon3
deblockenable	s3c_mfc.h	/^	int  deblockenable;$/;"	m	struct:__anon1
dec_exe	s3c_mfc_params.h	/^	s3c_mfc_dec_exe_arg_t		dec_exe;$/;"	m	union:__anon13
dec_init	s3c_mfc_params.h	/^	s3c_mfc_dec_init_arg_t		dec_init;$/;"	m	union:__anon13
dec_pic_option	s3c_mfc_instance.h	/^	unsigned int    dec_pic_option;			\/* 0-th bit : MP4ASP FLAG, *\/$/;"	m	struct:__anon3
enc_change_framerate	s3c_mfc_instance.h	/^	unsigned int	enc_change_framerate;  		\/* when Frame Rate changing *\/							$/;"	m	struct:__anon3
enc_exe	s3c_mfc_params.h	/^	s3c_mfc_enc_exe_arg_t		enc_exe;$/;"	m	union:__anon13
enc_init	s3c_mfc_params.h	/^	s3c_mfc_enc_init_arg_t		enc_init;$/;"	m	union:__anon13
enc_num_slices	s3c_mfc_instance.h	/^	int		enc_num_slices;$/;"	m	struct:__anon3
enc_pic_option	s3c_mfc_instance.h	/^	unsigned int	enc_pic_option;			\/* 0-th bit : S3C_ENC_PIC_OPT_SKIP, *\/$/;"	m	struct:__anon3
frame_num	s3c_mfc_instance.h	/^	int		frame_num;			\/* DEC_PIC_FRAME_NUM *\/$/;"	m	struct:__anon3
frame_rate_division	s3c_mfc_instance.h	/^	int		frame_rate_division;$/;"	m	struct:__anon3
frame_rate_division	s3c_mfc_instance.h	/^	int frame_rate_division;$/;"	m	struct:__anon4
frame_rate_residual	s3c_mfc_instance.h	/^	int		frame_rate_residual;$/;"	m	struct:__anon3
frame_rate_residual	s3c_mfc_instance.h	/^	int frame_rate_residual;$/;"	m	struct:__anon4
get_buf_addr	s3c_mfc_params.h	/^	s3c_mfc_get_buf_addr_arg_t		get_buf_addr;$/;"	m	union:__anon13
get_config	s3c_mfc_params.h	/^	s3c_mfc_get_config_arg_t		get_config;$/;"	m	union:__anon13
gop_number	s3c_mfc_instance.h	/^	int		gop_number;$/;"	m	struct:__anon3
gop_number	s3c_mfc_instance.h	/^	int gop_number;$/;"	m	struct:__anon4
h263_annex	s3c_mfc_instance.h	/^	int		h263_annex;$/;"	m	struct:__anon3
height	s3c_mfc_instance.h	/^	int		width, height;$/;"	m	struct:__anon3
height	s3c_mfc_instance.h	/^	int height;$/;"	m	struct:__anon4
idx_commit	s3c_mfc_yuv_buf_manager.c	/^	int            idx_commit;$/;"	m	struct:__anon15	file:
in_bitrate	s3c_mfc_params.h	/^	int in_bitrate;		\/* [IN]  Encoding parameter: Bitrate (kbps) *\/$/;"	m	struct:__anon5
in_config_param	s3c_mfc_params.h	/^	int in_config_param;		\/* [IN]  Configurable parameter type *\/$/;"	m	struct:__anon10
in_config_param	s3c_mfc_params.h	/^	int in_config_param;		\/* [IN]  Configurable parameter type *\/$/;"	m	struct:__anon11
in_config_param2	s3c_mfc_params.h	/^	int in_config_param2;$/;"	m	struct:__anon10
in_config_value	s3c_mfc_params.h	/^	int in_config_value[3];		\/* [IN]  Values to be set for the configurable parameter. *\/$/;"	m	struct:__anon11
in_frameRateDiv	s3c_mfc_params.h	/^	int in_frameRateDiv;	\/* [IN]  Encoding parameter: Frame rate (Divider) *\/$/;"	m	struct:__anon5
in_frameRateRes	s3c_mfc_params.h	/^	int in_frameRateRes;	\/* [IN]  Encoding parameter: Frame rate (Res) *\/$/;"	m	struct:__anon5
in_gamma	s3c_mfc_params.h	/^	float in_gamma;         \/* [IN] Encoding Paramter: Gamma Factor for Motion Estimation *\/$/;"	m	struct:__anon5
in_gopNum	s3c_mfc_params.h	/^	int in_gopNum;		\/* [IN]  Encoding parameter: GOP Number (interval of I-frame) *\/$/;"	m	struct:__anon5
in_height	s3c_mfc_params.h	/^	int in_height;		\/* [IN]  height of YUV420 frame to be encoded *\/$/;"	m	struct:__anon5
in_intraqp	s3c_mfc_params.h	/^	int in_intraqp;         \/* [IN] Encoding Parameter: Intra Quantization Parameter *\/$/;"	m	struct:__anon5
in_qpmax	s3c_mfc_params.h	/^	int in_qpmax;           \/* [IN] Encoding Paramter: Maximum Quantization Paramter *\/$/;"	m	struct:__anon5
in_strmSize	s3c_mfc_params.h	/^	int in_strmSize;	\/* [IN]  Size of video stream filled in STRM_BUF *\/$/;"	m	struct:__anon7
in_strmSize	s3c_mfc_params.h	/^	int in_strmSize;	\/* [IN]  Size of video stream filled in STRM_BUF *\/$/;"	m	struct:__anon8
in_usr_data	s3c_mfc_params.h	/^	int in_usr_data;	\/* [IN]  User data for translating Kernel-mode address to User-mode address *\/$/;"	m	struct:__anon9
in_usr_data2	s3c_mfc_params.h	/^	int in_usr_data2;$/;"	m	struct:__anon9
in_usr_mapped_addr	s3c_mfc_params.h	/^	int		in_usr_mapped_addr;$/;"	m	struct:__anon12
in_width	s3c_mfc_params.h	/^	int in_width;		\/* [IN]  width  of YUV420 frame to be encoded *\/$/;"	m	struct:__anon5
index_base_seg	s3c_mfc_yuv_buf_manager.c	/^	int index_base_seg;$/;"	m	struct:__anon16	file:
inst_no	s3c_mfc_instance.h	/^	int		inst_no;$/;"	m	struct:__anon3
mb_type_addr	s3c_mfc_params.h	/^	int		mb_type_addr;$/;"	m	struct:__anon12
mb_type_size	s3c_mfc_params.h	/^	unsigned int  	mb_type_size;$/;"	m	struct:__anon12
mfc_debug	s3c_mfc.h	110;"	d
mfc_debug	s3c_mfc.h	112;"	d
mfc_err	s3c_mfc.h	115;"	d
mfc_info	s3c_mfc.h	117;"	d
mfc_inst	s3c_mfc.c	/^	s3c_mfc_inst_context_t *mfc_inst;$/;"	m	struct:_MFC_HANDLE	file:
mfc_notice	s3c_mfc.h	116;"	d
mfc_warn	s3c_mfc.h	118;"	d
mp4asp_fcode	s3c_mfc_params.h	/^	unsigned int  	mp4asp_fcode;$/;"	m	struct:__anon12
mp4asp_nonb_time_last	s3c_mfc_params.h	/^	unsigned int  	mp4asp_nonb_time_last;$/;"	m	struct:__anon12
mp4asp_time_base_last	s3c_mfc_params.h	/^	unsigned int  	mp4asp_time_base_last;$/;"	m	struct:__anon12
mp4asp_trd	s3c_mfc_params.h	/^	unsigned int  	mp4asp_trd;$/;"	m	struct:__anon12
mp4asp_vop_time_res	s3c_mfc_params.h	/^	unsigned int  	mp4asp_vop_time_res;$/;"	m	struct:__anon12
mpeg4_asp_param	s3c_mfc_params.h	/^	s3c_mfc_get_mpeg4asp_arg_t		mpeg4_asp_param;$/;"	m	union:__anon13
mpeg4_level	s3c_mfc_instance.h	/^	int		mpeg4_level;			\/* MPEG4 Level *\/$/;"	m	struct:__anon3
mv_addr	s3c_mfc_params.h	/^	int   		mv_addr;$/;"	m	struct:__anon12
mv_mbyte_addr	s3c_mfc_instance.h	/^	unsigned int	mv_mbyte_addr;       		\/* phyaical address of MV and MByte tables *\/$/;"	m	struct:__anon3
mv_size	s3c_mfc_params.h	/^	unsigned int  	mv_size;$/;"	m	struct:__anon12
num_segs	s3c_mfc_yuv_buf_manager.c	/^	int num_segs;$/;"	m	struct:__anon16	file:
out_buf_addr	s3c_mfc_params.h	/^	int out_buf_addr;	\/* [OUT] Buffer address *\/$/;"	m	struct:__anon9
out_buf_height	s3c_mfc_params.h	/^	int out_buf_height;	\/* [OUT] buffer's height of YUV420 frame *\/$/;"	m	struct:__anon7
out_buf_size	s3c_mfc_params.h	/^	int out_buf_size;	\/* [OUT] Size of buffer address *\/$/;"	m	struct:__anon9
out_buf_width	s3c_mfc_params.h	/^	int out_buf_width;	\/* [OUT] buffer's width of YUV420 frame *\/$/;"	m	struct:__anon7
out_config_value	s3c_mfc_params.h	/^	int out_config_value[2];	\/* [IN]  Values to get for the configurable parameter. *\/$/;"	m	struct:__anon10
out_config_value_old	s3c_mfc_params.h	/^	int out_config_value_old[2];	\/* [OUT] Old values of the configurable parameters *\/$/;"	m	struct:__anon11
out_encoded_size	s3c_mfc_params.h	/^	int out_encoded_size;	\/* [OUT] Length of Encoded video stream *\/$/;"	m	struct:__anon6
out_header_size	s3c_mfc_params.h	/^	int out_header_size;	\/* [OUT] Length of video stream header *\/$/;"	m	struct:__anon6
out_height	s3c_mfc_params.h	/^	int out_height;		\/* [OUT] height of YUV420 frame *\/$/;"	m	struct:__anon7
out_width	s3c_mfc_params.h	/^	int out_width;		\/* [OUT] width  of YUV420 frame *\/$/;"	m	struct:__anon7
pBaseAddr	s3c_mfc_yuv_buf_manager.c	/^	unsigned char *pBaseAddr;$/;"	m	struct:__anon15	file:
pMBType	s3c_mfc.c	/^	unsigned char *pMBType;$/;"	m	struct:_MFC_HANDLE	file:
pMV	s3c_mfc.c	/^	unsigned char *pMV;$/;"	m	struct:_MFC_HANDLE	file:
padding_size	s3c_mfc_instance.h	/^	unsigned int	padding_size;$/;"	m	struct:__anon3
phys_addr_stream_buffer	s3c_mfc_instance.h	/^	unsigned int	phys_addr_stream_buffer;	\/* stream buffer physical address *\/$/;"	m	struct:__anon3
phys_addr_yuv_buffer	s3c_mfc_instance.h	/^	unsigned int	phys_addr_yuv_buffer;		\/* yuv buffer physical address *\/$/;"	m	struct:__anon3
post_rotation_mode	s3c_mfc_instance.h	/^	unsigned int    post_rotation_mode;$/;"	m	struct:__anon3
ret_code	s3c_mfc_params.h	/^	int   		ret_code;            \/* [OUT] Return code *\/$/;"	m	struct:__anon12
ret_code	s3c_mfc_params.h	/^	int ret_code;			\/* [OUT] Return code *\/$/;"	m	struct:__anon10
ret_code	s3c_mfc_params.h	/^	int ret_code;			\/* [OUT] Return code *\/$/;"	m	struct:__anon11
ret_code	s3c_mfc_params.h	/^	int ret_code;		\/* [OUT] Return code *\/$/;"	m	struct:__anon5
ret_code	s3c_mfc_params.h	/^	int ret_code;		\/* [OUT] Return code *\/$/;"	m	struct:__anon6
ret_code	s3c_mfc_params.h	/^	int ret_code;		\/* [OUT] Return code *\/$/;"	m	struct:__anon7
ret_code	s3c_mfc_params.h	/^	int ret_code;		\/* [OUT] Return code *\/$/;"	m	struct:__anon8
ret_code	s3c_mfc_params.h	/^	int ret_code;		\/* [OUT] Return code *\/$/;"	m	struct:__anon9
rotate	s3c_mfc.h	/^	int  rotate;$/;"	m	struct:__anon1
run_index	s3c_mfc_instance.h	/^	int		run_index;			\/* DEC_PIC_RUN_IDX *\/$/;"	m	struct:__anon3
s3c_mfc_after_pdon	s3c_mfc.c	/^int s3c_mfc_after_pdon(void)$/;"	f
s3c_mfc_args_t	s3c_mfc_params.h	/^} s3c_mfc_args_t;$/;"	t	typeref:union:__anon13
s3c_mfc_before_pdoff	s3c_mfc.c	/^int s3c_mfc_before_pdoff(void)$/;"	f
s3c_mfc_bit_code	prism_s_v13d.c	/^const unsigned short s3c_mfc_bit_code[40960] = {$/;"	v
s3c_mfc_buffer_base	s3c_mfc_yuv_buf_manager.c	/^static unsigned char *s3c_mfc_buffer_base  = NULL;$/;"	v	file:
s3c_mfc_buffer_size	s3c_mfc_yuv_buf_manager.c	/^static int            s3c_mfc_buffer_size  = 0;$/;"	v	file:
s3c_mfc_clear_intr	s3c_mfc_sfr.c	/^void s3c_mfc_clear_intr(void)$/;"	f
s3c_mfc_codec_mode_t	s3c_mfc_base.h	/^} s3c_mfc_codec_mode_t;$/;"	t	typeref:enum:__MFC_CODEC_MODE
s3c_mfc_command_t	s3c_mfc_base.h	/^} s3c_mfc_command_t;$/;"	t	typeref:enum:__MFC_COMMAND
s3c_mfc_commit_info	s3c_mfc_yuv_buf_manager.c	/^static s3c_mfc_commit_info_t   *s3c_mfc_commit_info  = NULL;$/;"	v	file:
s3c_mfc_commit_info_t	s3c_mfc_yuv_buf_manager.c	/^} s3c_mfc_commit_info_t;$/;"	t	typeref:struct:__anon16	file:
s3c_mfc_commit_yuv_buffer_mgr	s3c_mfc_yuv_buf_manager.c	/^unsigned char *s3c_mfc_commit_yuv_buffer_mgr(int idx_commit, int commit_size)$/;"	f
s3c_mfc_config_sfr_bitproc_buffer	s3c_mfc_sfr.c	/^void s3c_mfc_config_sfr_bitproc_buffer(void)$/;"	f
s3c_mfc_config_sfr_ctrl_opts	s3c_mfc_sfr.c	/^void s3c_mfc_config_sfr_ctrl_opts(void)$/;"	f
s3c_mfc_dec_exe_arg_t	s3c_mfc_params.h	/^} s3c_mfc_dec_exe_arg_t;$/;"	t	typeref:struct:__anon8
s3c_mfc_dec_init_arg_t	s3c_mfc_params.h	/^} s3c_mfc_dec_init_arg_t;$/;"	t	typeref:struct:__anon7
s3c_mfc_decode_options_t	s3c_mfc.h	/^} s3c_mfc_decode_options_t;$/;"	t	typeref:struct:__anon1
s3c_mfc_download_boot_firmware	s3c_mfc_sfr.c	/^void s3c_mfc_download_boot_firmware(void)$/;"	f
s3c_mfc_driver	s3c_mfc.c	/^static struct platform_driver s3c_mfc_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c_mfc_enc_exe_arg_t	s3c_mfc_params.h	/^} s3c_mfc_enc_exe_arg_t;$/;"	t	typeref:struct:__anon6
s3c_mfc_enc_info_t	s3c_mfc_instance.h	/^} s3c_mfc_enc_info_t;$/;"	t	typeref:struct:__anon4
s3c_mfc_enc_init_arg_t	s3c_mfc_params.h	/^} s3c_mfc_enc_init_arg_t;$/;"	t	typeref:struct:__anon5
s3c_mfc_exit	s3c_mfc.c	/^module_exit(s3c_mfc_exit);$/;"	v
s3c_mfc_exit	s3c_mfc.c	/^static void __exit s3c_mfc_exit(void)$/;"	f	file:
s3c_mfc_fops	s3c_mfc.c	/^static struct file_operations s3c_mfc_fops = {$/;"	v	typeref:struct:file_operations	file:
s3c_mfc_free_yuv_buffer_mgr	s3c_mfc_yuv_buf_manager.c	/^void s3c_mfc_free_yuv_buffer_mgr(int idx_commit)$/;"	f
s3c_mfc_get_avail_inst_pool_num	s3c_mfc_inst_pool.c	/^int s3c_mfc_get_avail_inst_pool_num(void)$/;"	f
s3c_mfc_get_bitproc_buff_virt_addr	s3c_mfc_bitproc_buf.c	/^volatile unsigned char *s3c_mfc_get_bitproc_buff_virt_addr()$/;"	f
s3c_mfc_get_buf_addr_arg_t	s3c_mfc_params.h	/^} s3c_mfc_get_buf_addr_arg_t;$/;"	t	typeref:struct:__anon9
s3c_mfc_get_cmd_string	s3c_mfc_sfr.c	/^static char *s3c_mfc_get_cmd_string(s3c_mfc_command_t mfc_cmd)$/;"	f	file:
s3c_mfc_get_commit_info_phys_addr	s3c_mfc_databuf.c	/^unsigned int s3c_mfc_get_commit_info_phys_addr()$/;"	f
s3c_mfc_get_commit_info_virt_addr	s3c_mfc_databuf.c	/^volatile unsigned char *s3c_mfc_get_commit_info_virt_addr()$/;"	f
s3c_mfc_get_config_arg_t	s3c_mfc_params.h	/^} s3c_mfc_get_config_arg_t;$/;"	t	typeref:struct:__anon10
s3c_mfc_get_config_params	s3c_mfc_set_config.c	/^int s3c_mfc_get_config_params(s3c_mfc_inst_context_t *mfc_inst, s3c_mfc_args_t *args )$/;"	f
s3c_mfc_get_databuf_phys_addr	s3c_mfc_databuf.c	/^unsigned int s3c_mfc_get_databuf_phys_addr()$/;"	f
s3c_mfc_get_databuf_virt_addr	s3c_mfc_databuf.c	/^volatile unsigned char *s3c_mfc_get_databuf_virt_addr()$/;"	f
s3c_mfc_get_firmware_ver	s3c_mfc_sfr.c	/^int s3c_mfc_get_firmware_ver(void)$/;"	f
s3c_mfc_get_mpeg4asp_arg_t	s3c_mfc_params.h	/^} s3c_mfc_get_mpeg4asp_arg_t;$/;"	t	typeref:struct:__anon12
s3c_mfc_get_param_buff_virt_addr	s3c_mfc_bitproc_buf.c	/^unsigned char *s3c_mfc_get_param_buff_virt_addr()$/;"	f
s3c_mfc_get_segment_info_phys_addr	s3c_mfc_databuf.c	/^unsigned int s3c_mfc_get_segment_info_phys_addr()$/;"	f
s3c_mfc_get_segment_info_virt_addr	s3c_mfc_databuf.c	/^volatile unsigned char *s3c_mfc_get_segment_info_virt_addr()$/;"	f
s3c_mfc_get_stream_buffer_addr	s3c_mfc_instance.c	/^static void s3c_mfc_get_stream_buffer_addr(s3c_mfc_inst_context_t *ctx)$/;"	f	file:
s3c_mfc_get_yuv_buffer	s3c_mfc_yuv_buf_manager.c	/^unsigned char *s3c_mfc_get_yuv_buffer(int idx_commit)$/;"	f
s3c_mfc_get_yuv_buffer_addr	s3c_mfc_instance.c	/^static BOOL s3c_mfc_get_yuv_buffer_addr(s3c_mfc_inst_context_t *ctx, int buf_size)$/;"	f	file:
s3c_mfc_get_yuv_buffer_size	s3c_mfc_yuv_buf_manager.c	/^int s3c_mfc_get_yuv_buffer_size(int idx_commit)$/;"	f
s3c_mfc_get_yuvbuff_phys_addr	s3c_mfc_databuf.c	/^unsigned int s3c_mfc_get_yuvbuff_phys_addr()$/;"	f
s3c_mfc_get_yuvbuff_virt_addr	s3c_mfc_databuf.c	/^volatile unsigned char *s3c_mfc_get_yuvbuff_virt_addr()$/;"	f
s3c_mfc_handle_t	s3c_mfc.c	/^} s3c_mfc_handle_t;$/;"	t	typeref:struct:_MFC_HANDLE	file:
s3c_mfc_hclk	s3c_mfc.c	/^static struct clk	*s3c_mfc_hclk;$/;"	v	typeref:struct:clk	file:
s3c_mfc_init	s3c_mfc.c	/^module_init(s3c_mfc_init);$/;"	v
s3c_mfc_init	s3c_mfc.c	/^static int __init s3c_mfc_init(void)$/;"	f	file:
s3c_mfc_init_hw	s3c_mfc_init_hw.c	/^BOOL s3c_mfc_init_hw(void)$/;"	f
s3c_mfc_init_yuvbuf_mgr	s3c_mfc_yuv_buf_manager.c	/^BOOL s3c_mfc_init_yuvbuf_mgr(unsigned char *buffer_base, int buffer_size)$/;"	f
s3c_mfc_inst_context_t	s3c_mfc_instance.h	/^} s3c_mfc_inst_context_t;$/;"	t	typeref:struct:__anon3
s3c_mfc_inst_create	s3c_mfc_instance.c	/^s3c_mfc_inst_context_t *s3c_mfc_inst_create(void)$/;"	f
s3c_mfc_inst_dec	s3c_mfc_instance.c	/^int s3c_mfc_inst_dec(s3c_mfc_inst_context_t *ctx, unsigned long strm_leng)$/;"	f
s3c_mfc_inst_del	s3c_mfc_instance.c	/^void s3c_mfc_inst_del(s3c_mfc_inst_context_t *ctx)$/;"	f
s3c_mfc_inst_enc	s3c_mfc_instance.c	/^int s3c_mfc_inst_enc(s3c_mfc_inst_context_t *ctx, int *enc_data_size, int *header_size)$/;"	f
s3c_mfc_inst_enc_header	s3c_mfc_instance.c	/^int s3c_mfc_inst_enc_header(s3c_mfc_inst_context_t *ctx, int hdr_code, int hdr_num, unsigned int outbuf_physical_addr,\\$/;"	f
s3c_mfc_inst_enc_param_change	s3c_mfc_instance.c	/^int s3c_mfc_inst_enc_param_change(s3c_mfc_inst_context_t *ctx, unsigned int param_change_enable, 	\\$/;"	f
s3c_mfc_inst_get_context	s3c_mfc_instance.c	/^s3c_mfc_inst_context_t *s3c_mfc_inst_get_context(int inst_no)$/;"	f
s3c_mfc_inst_get_line_buff	s3c_mfc_instance.c	/^int s3c_mfc_inst_get_line_buff(s3c_mfc_inst_context_t *ctx, unsigned char **buffer, int *size)$/;"	f
s3c_mfc_inst_get_no	s3c_mfc_instance.c	/^int s3c_mfc_inst_get_no(s3c_mfc_inst_context_t *ctx)$/;"	f
s3c_mfc_inst_get_stream_buff_rw_ptrs	s3c_mfc_instance.c	/^BOOL s3c_mfc_inst_get_stream_buff_rw_ptrs(s3c_mfc_inst_context_t *ctx, unsigned char **read_ptr, \\$/;"	f
s3c_mfc_inst_get_yuv_buff	s3c_mfc_instance.c	/^int s3c_mfc_inst_get_yuv_buff(s3c_mfc_inst_context_t *ctx, unsigned char **buffer, int *size)$/;"	f
s3c_mfc_inst_init_dec	s3c_mfc_instance.c	/^int s3c_mfc_inst_init_dec(s3c_mfc_inst_context_t *ctx, s3c_mfc_codec_mode_t codec_mode, unsigned long strm_leng)$/;"	f
s3c_mfc_inst_pow_off_state	s3c_mfc_instance.c	/^void s3c_mfc_inst_pow_off_state(s3c_mfc_inst_context_t *ctx)$/;"	f
s3c_mfc_inst_pow_on_state	s3c_mfc_instance.c	/^void s3c_mfc_inst_pow_on_state(s3c_mfc_inst_context_t *ctx)$/;"	f
s3c_mfc_inst_set_post_rotate	s3c_mfc_instance.c	/^unsigned int s3c_mfc_inst_set_post_rotate(s3c_mfc_inst_context_t *ctx, unsigned int post_rotmode)$/;"	f
s3c_mfc_inst_status	s3c_mfc_inst_pool.c	/^static int s3c_mfc_inst_status[S3C_MFC_NUM_INSTANCES_MAX] = {0, };$/;"	v	file:
s3c_mfc_instance_init_enc	s3c_mfc_instance.c	/^int s3c_mfc_instance_init_enc(s3c_mfc_inst_context_t *ctx, s3c_mfc_codec_mode_t codec_mode, s3c_mfc_enc_info_t *enc_info)$/;"	f
s3c_mfc_instance_state_t	s3c_mfc_instance.h	/^} s3c_mfc_instance_state_t;$/;"	t	typeref:enum:__anon2
s3c_mfc_intr_reason	s3c_mfc_sfr.c	/^unsigned int s3c_mfc_intr_reason(void)$/;"	f
s3c_mfc_intr_type	s3c_mfc.c	/^unsigned int s3c_mfc_intr_type = 0;$/;"	v
s3c_mfc_ioctl	s3c_mfc.c	/^static int s3c_mfc_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
s3c_mfc_irq	s3c_mfc.c	/^static irqreturn_t s3c_mfc_irq(int irq, void *dev_id)$/;"	f	file:
s3c_mfc_issue_command	s3c_mfc_sfr.c	/^BOOL s3c_mfc_issue_command(int inst_no, s3c_mfc_codec_mode_t codec_mode, s3c_mfc_command_t mfc_cmd)$/;"	f
s3c_mfc_mem	s3c_mfc.c	/^static struct resource *s3c_mfc_mem;$/;"	v	typeref:struct:resource	file:
s3c_mfc_memmap_bitproc_buff	s3c_mfc_bitproc_buf.c	/^BOOL s3c_mfc_memmap_bitproc_buff()$/;"	f
s3c_mfc_memmap_databuf	s3c_mfc_databuf.c	/^BOOL s3c_mfc_memmap_databuf()$/;"	f
s3c_mfc_miscdev	s3c_mfc.c	/^static struct miscdevice s3c_mfc_miscdev = {$/;"	v	typeref:struct:miscdevice	file:
s3c_mfc_mmap	s3c_mfc.c	/^int s3c_mfc_mmap(struct file *filp, struct vm_area_struct *vma)$/;"	f
s3c_mfc_mutex	s3c_mfc.c	/^static struct mutex *s3c_mfc_mutex = NULL;$/;"	v	typeref:struct:mutex	file:
s3c_mfc_num_inst_avail	s3c_mfc_inst_pool.c	/^static int s3c_mfc_num_inst_avail = S3C_MFC_NUM_INSTANCES_MAX;$/;"	v	file:
s3c_mfc_num_segments	s3c_mfc_yuv_buf_manager.c	/^static int            s3c_mfc_num_segments		= 0;$/;"	v	file:
s3c_mfc_occupy_all_inst_pool	s3c_mfc_inst_pool.c	/^void s3c_mfc_occupy_all_inst_pool(void)$/;"	f
s3c_mfc_occupy_inst_pool	s3c_mfc_inst_pool.c	/^int s3c_mfc_occupy_inst_pool(void)$/;"	f
s3c_mfc_open	s3c_mfc.c	/^static int s3c_mfc_open(struct inode *inode, struct file *file)$/;"	f	file:
s3c_mfc_openhandle_count	s3c_mfc.c	/^static int s3c_mfc_openhandle_count = 0;$/;"	v	file:
s3c_mfc_pclk	s3c_mfc.c	/^static struct clk	*s3c_mfc_pclk;$/;"	v	typeref:struct:clk	file:
s3c_mfc_phys_bitproc_buff	s3c_mfc_bitproc_buf.c	/^static unsigned int                s3c_mfc_phys_bitproc_buff  = 0;$/;"	v	file:
s3c_mfc_phys_buffer	s3c_mfc.c	/^dma_addr_t s3c_mfc_phys_buffer;$/;"	v
s3c_mfc_phys_data_buf	s3c_mfc_databuf.c	/^static unsigned int                s3c_mfc_phys_data_buf = 0;$/;"	v	file:
s3c_mfc_pmdev	s3c_mfc.c	/^struct pm_devtype s3c_mfc_pmdev = {$/;"	v	typeref:struct:pm_devtype
s3c_mfc_print_commit_yuv_buffer_info	s3c_mfc_yuv_buf_manager.c	/^void s3c_mfc_print_commit_yuv_buffer_info()$/;"	f
s3c_mfc_probe	s3c_mfc.c	/^static int s3c_mfc_probe(struct platform_device *pdev)$/;"	f	file:
s3c_mfc_put_firmware_into_codebuff	s3c_mfc_bitproc_buf.c	/^void s3c_mfc_put_firmware_into_codebuff()$/;"	f
s3c_mfc_read	s3c_mfc.c	/^static ssize_t s3c_mfc_read(struct file *file, char *buf, size_t count, loff_t *pos)$/;"	f	file:
s3c_mfc_release	s3c_mfc.c	/^static int s3c_mfc_release(struct inode *inode, struct file *file)$/;"	f	file:
s3c_mfc_release_all_inst_pool	s3c_mfc_inst_pool.c	/^void s3c_mfc_release_all_inst_pool(void)$/;"	f
s3c_mfc_release_inst_pool	s3c_mfc_inst_pool.c	/^int s3c_mfc_release_inst_pool(int instance_no)$/;"	f
s3c_mfc_remove	s3c_mfc.c	/^static int s3c_mfc_remove(struct platform_device *dev)$/;"	f	file:
s3c_mfc_reset	s3c_mfc_sfr.c	/^void s3c_mfc_reset(void)$/;"	f
s3c_mfc_resume	s3c_mfc.c	/^static int s3c_mfc_resume(struct platform_device *pdev)$/;"	f	file:
s3c_mfc_save	s3c_mfc.c	/^static unsigned int s3c_mfc_save[S3C_MFC_SAVE_END_ADDR - S3C_MFC_SAVE_START_ADDR];$/;"	v	file:
s3c_mfc_sclk	s3c_mfc.c	/^static struct clk	*s3c_mfc_sclk;$/;"	v	typeref:struct:clk	file:
s3c_mfc_segment_info	s3c_mfc_yuv_buf_manager.c	/^static s3c_mfc_segment_info_t  *s3c_mfc_segment_info = NULL;$/;"	v	file:
s3c_mfc_segment_info_t	s3c_mfc_yuv_buf_manager.c	/^} s3c_mfc_segment_info_t;$/;"	t	typeref:struct:__anon15	file:
s3c_mfc_set_config_arg_t	s3c_mfc_params.h	/^} s3c_mfc_set_config_arg_t;$/;"	t	typeref:struct:__anon11
s3c_mfc_set_config_params	s3c_mfc_set_config.c	/^int s3c_mfc_set_config_params(s3c_mfc_inst_context_t *mfc_inst, s3c_mfc_args_t *args)		$/;"	f
s3c_mfc_set_eos	s3c_mfc_sfr.c	/^void s3c_mfc_set_eos(int buffer_mode)$/;"	f
s3c_mfc_setup_clock	s3c_mfc.c	/^static BOOL s3c_mfc_setup_clock(void)$/;"	f	file:
s3c_mfc_setup_memory	s3c_mfc_init_hw.c	/^BOOL s3c_mfc_setup_memory(void)$/;"	f
s3c_mfc_sfr_base_virt_addr	s3c_mfc.c	/^void __iomem *s3c_mfc_sfr_base_virt_addr;$/;"	v
s3c_mfc_sleep	s3c_mfc_sfr.c	/^int s3c_mfc_sleep()$/;"	f
s3c_mfc_start_bit_processor	s3c_mfc_sfr.c	/^void s3c_mfc_start_bit_processor(void)$/;"	f
s3c_mfc_stop_bit_processor	s3c_mfc_sfr.c	/^void s3c_mfc_stop_bit_processor(void)$/;"	f
s3c_mfc_stream_end	s3c_mfc_sfr.c	/^void s3c_mfc_stream_end()$/;"	f
s3c_mfc_suspend	s3c_mfc.c	/^static int s3c_mfc_suspend(struct platform_device *dev, pm_message_t state)$/;"	f	file:
s3c_mfc_virt_bitproc_buff	s3c_mfc_bitproc_buf.c	/^static volatile unsigned char     *s3c_mfc_virt_bitproc_buff  = NULL;$/;"	v	file:
s3c_mfc_virt_data_buf	s3c_mfc_databuf.c	/^static volatile unsigned char     *s3c_mfc_virt_data_buf = NULL;$/;"	v	file:
s3c_mfc_wait_for_ready	s3c_mfc_sfr.c	/^static int s3c_mfc_wait_for_ready(void)$/;"	f	file:
s3c_mfc_wait_queue	s3c_mfc.c	/^DECLARE_WAIT_QUEUE_HEAD(s3c_mfc_wait_queue);$/;"	v
s3c_mfc_wakeup	s3c_mfc_sfr.c	/^int s3c_mfc_wakeup()$/;"	f
s3c_mfc_write	s3c_mfc.c	/^static ssize_t s3c_mfc_write(struct file *file, const char *buf, size_t count, loff_t *pos)$/;"	f	file:
s3c_mfc_yuv_buffer_mgr_final	s3c_mfc_yuv_buf_manager.c	/^void s3c_mfc_yuv_buffer_mgr_final()$/;"	f
set_config	s3c_mfc_params.h	/^	s3c_mfc_set_config_arg_t		set_config;$/;"	m	union:__anon13
state_var	s3c_mfc_instance.h	/^	s3c_mfc_instance_state_t   state_var;		\/* State Variable *\/$/;"	m	struct:__anon3
stream_buffer	s3c_mfc_instance.h	/^	unsigned char	*stream_buffer;			\/* stream buffer pointer (virtual address) *\/$/;"	m	struct:__anon3
stream_buffer_size	s3c_mfc_instance.h	/^	unsigned int	stream_buffer_size;		\/* stream buffer size *\/$/;"	m	struct:__anon3
vop_time_ince_sol	s3c_mfc_instance.h	/^	int		vop_time_ince_sol;		\/* Vop Time Increment Resolution value *\/$/;"	m	struct:__anon3
width	s3c_mfc_instance.h	/^	int		width, height;$/;"	m	struct:__anon3
width	s3c_mfc_instance.h	/^	int width;$/;"	m	struct:__anon4
yuv_buffer	s3c_mfc_instance.h	/^	unsigned char	*yuv_buffer;			\/* yuv buffer pointer (virtual address) *\/$/;"	m	struct:__anon3
yuv_buffer_allocated	s3c_mfc_instance.h	/^	int		yuv_buffer_allocated;$/;"	m	struct:__anon3
yuv_buffer_count	s3c_mfc_instance.h	/^	int		yuv_buffer_count;		\/* decoding case: RET_DEC_SEQ_FRAME_NEED_COUNT *\/$/;"	m	struct:__anon3
yuv_buffer_size	s3c_mfc_instance.h	/^	unsigned int	yuv_buffer_size;		\/* yuv buffer size *\/$/;"	m	struct:__anon3
